spring.application.name=capBackend
#Support reading from .env or .env properties files
spring.config.import=optional:file:.env[.properties]

#1. Create the database called customer_schema
#2. Only then, can we run our app based on following connection
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC

#3. Set up the user and customer that access the DB
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_USER_PASSWORD}

#4 Create tables and observe the tables created
# update - for any changes to our app models, the db tables will ebupdated.
#create-drop - for occasions when app starts, drop and re-create the tables.
# none - just use default DB and tables as they are.
spring.jpa.hibernate.ddl-auto=create-drop

#4.1 Connect the app to the database
spring.datasource.drive-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.access=DEBUG
logging.level.org.springframework.security.authentication=DEBUG

#Set upload location and limit
file.upload-dir=uploads/images
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB 





